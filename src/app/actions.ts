'use server';

import { cookies } from 'next/headers';
import { initializeApp, getApps, getApp, App } from 'firebase/app';
import { getAuth } from 'firebase/auth';

const SESSION_COOKIE_NAME = 'user_session';
const USERNAME_COOKIE_NAME = 'username';
const USER_UID_COOKIE_NAME = 'user_uid';

// This is a server-side action to create a session cookie.
// It does NOT use firebase-admin, so it does not require a service account key.
// It receives the token generated by the client-side Firebase SDK.
export async function createSession(idToken: string) {
  // We don't have access to firebase-admin to verify the token and create a session cookie.
  // As a workaround for this environment, we will store the idToken directly in the cookie.
  // This is NOT recommended for production as the token has a shorter expiry.
  // A proper implementation would use firebase-admin in a backend environment
  // with the service account key to create a long-lived session cookie.

  const userEmail = cookies().get('temp_user_email')?.value;
  if (userEmail) {
    const username = userEmail.split('@')[0];
    cookies().set(USERNAME_COOKIE_NAME, username, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      maxAge: 60 * 60 * 24 * 7, // One week
      path: '/',
    });
  }
  
  cookies().set(SESSION_COOKIE_NAME, idToken, {
    httpOnly: true,
    secure: process.env.NODE_ENV === 'production',
    maxAge: 60 * 60, // 1 hour, matching the ID token's lifespan
    path: '/',
  });
  
  // Clear the temporary email cookie
  cookies().delete('temp_user_email');
}


export async function clearSession() {
  cookies().delete(SESSION_COOKIE_NAME);
  cookies().delete(USERNAME_COOKIE_NAME);
  cookies().delete(USER_UID_COOKIE_NAME);
}

// This action is used to temporarily store the user's email
// so we can derive the username after successful login on the server.
export async function setTempEmailCookie(email: string) {
    cookies().set('temp_user_email', email, {
        httpOnly: true,
        secure: process.env.NODE_ENV === 'production',
        maxAge: 60 * 5, // 5 minutes
        path: '/',
    });
}
